{"mappings":"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","sources":["node_modules/.pnpm/mitt@3.0.0/node_modules/mitt/src/index.ts","lib/Auth.tsx","lib/Firestore.tsx","node_modules/.pnpm/store2@2.13.2/node_modules/store2/dist/store2.js","lib/Store.tsx","lib/auth/login.ts","lib/auth/logout.ts","lib/auth/verify.ts"],"sourcesContent":["export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from 'mitt';\nimport { createContext, ReactNode, useContext } from 'react';\nimport { useEffect, useState } from 'react';\nimport { Auth, onAuthStateChanged, updateProfile, User } from 'firebase/auth';\nimport deepEqual from 'fast-deep-equal/es6/react';\n\nexport type FirestarterAuthSettings = {\n  loginPath: string;\n  logoutPath: string;\n  verifyPath: string;\n  actionPath: string;\n  homePath: string;\n  userPath: string;\n};\n\nexport type FirestarterAuthType = {\n  currentUser: User | null;\n  connected: boolean;\n  auth: Auth | null;\n  settings: FirestarterAuthSettings;\n};\n\nexport type FirestarterProfileType = {\n  displayName?: string | null | undefined;\n  photoURL?: string | null | undefined;\n};\n\nconst defaultSettings: FirestarterAuthSettings = {\n  homePath: '/',\n  loginPath: '/login',\n  logoutPath: '/logout',\n  verifyPath: '/verify',\n  actionPath: '/action',\n  userPath: '/user',\n};\n\ntype FirestarterProfileEvent = {\n  authProfileUpdate: User;\n};\n\nconst AuthContext = createContext<FirestarterAuthType>({ currentUser: null, connected: false, auth: null, settings: defaultSettings });\n\nconst emitter = mitt<FirestarterProfileEvent>();\n\nexport function AuthProvider({ auth, settings, children }: { auth: Auth; settings?: FirestarterAuthSettings; children: ReactNode }) {\n  const [currentUser, setCurrentUser] = useState(auth.currentUser);\n  const [connected, setConnected] = useState(Boolean(auth.currentUser));\n  const [update, setUpdate] = useState({});\n  function forceUpdate() {\n    setUpdate({});\n  }\n\n  useEffect(() => {\n    const unsubscribeAuth = onAuthStateChanged(auth, (user) => {\n      setCurrentUser((currentUser) => {\n        // React will not re-render if the setState is the same object\n        // So deep check if the user from auth subscription is the same to prevent re-render\n        if (!deepEqual(currentUser, user)) {\n          return user;\n        } else {\n          return currentUser;\n        }\n      });\n\n      setConnected(true);\n    });\n    return unsubscribeAuth;\n  }, [auth]);\n\n  useEffect(() => {\n    function onProfileUpdate(user: User) {\n      // Firebase does not mutate user on profile updates so force an update\n      if (user === currentUser) {\n        forceUpdate();\n      }\n    }\n\n    emitter.on('authProfileUpdate', onProfileUpdate);\n\n    return () => {\n      emitter.off('authProfileUpdate', onProfileUpdate);\n    };\n  }, [currentUser]);\n\n  const value = { auth, currentUser: currentUser, connected, settings: { ...defaultSettings, ...settings } };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport const AuthConsumer = AuthContext.Consumer;\n\nexport function useAuth() {\n  return useContext<FirestarterAuthType>(AuthContext);\n}\n\n/**\n * Update the user's profile and emit an event to all subscribers\n */\nexport function updateUserProfile(user: User, profile: FirestarterProfileType) {\n  updateProfile(user, profile)\n    .then(() => {\n      emitter.emit('authProfileUpdate', user);\n    })\n    .catch((error) => {\n      throw error;\n    });\n}\n","import { createContext, ReactNode, useContext } from 'react';\nimport { Firestore } from 'firebase/firestore';\n\nconst FirestoreContext = createContext<Firestore>(null as unknown as Firestore);\n\nexport function FirestoreProvider({ firestore, children }: { firestore: Firestore; children: ReactNode }) {\n  if (!firestore) {\n    throw new Error('FirestoreProvider requires a Firestore instance');\n  }\n  return <FirestoreContext.Provider value={firestore}>{children}</FirestoreContext.Provider>;\n}\n\nexport const FirestoreConsumer = FirestoreContext.Consumer;\n\nexport function useFirestore() {\n  return useContext<Firestore>(FirestoreContext);\n}\n","/*! store2 - v2.13.2 - 2022-03-14\n* Copyright (c) 2022 Nathan Bubna; Licensed (MIT OR GPL-3.0) */\n;(function(window, define) {\n    var _ = {\n        version: \"2.13.2\",\n        areas: {},\n        apis: {},\n\n        // utilities\n        inherit: function(api, o) {\n            for (var p in api) {\n                if (!o.hasOwnProperty(p)) {\n                    Object.defineProperty(o, p, Object.getOwnPropertyDescriptor(api, p));\n                }\n            }\n            return o;\n        },\n        stringify: function(d, fn) {\n            return d === undefined || typeof d === \"function\" ? d+'' : JSON.stringify(d,fn||_.replace);\n        },\n        parse: function(s, fn) {\n            // if it doesn't parse, return as is\n            try{ return JSON.parse(s,fn||_.revive); }catch(e){ return s; }\n        },\n\n        // extension hooks\n        fn: function(name, fn) {\n            _.storeAPI[name] = fn;\n            for (var api in _.apis) {\n                _.apis[api][name] = fn;\n            }\n        },\n        get: function(area, key){ return area.getItem(key); },\n        set: function(area, key, string){ area.setItem(key, string); },\n        remove: function(area, key){ area.removeItem(key); },\n        key: function(area, i){ return area.key(i); },\n        length: function(area){ return area.length; },\n        clear: function(area){ area.clear(); },\n\n        // core functions\n        Store: function(id, area, namespace) {\n            var store = _.inherit(_.storeAPI, function(key, data, overwrite) {\n                if (arguments.length === 0){ return store.getAll(); }\n                if (typeof data === \"function\"){ return store.transact(key, data, overwrite); }// fn=data, alt=overwrite\n                if (data !== undefined){ return store.set(key, data, overwrite); }\n                if (typeof key === \"string\" || typeof key === \"number\"){ return store.get(key); }\n                if (typeof key === \"function\"){ return store.each(key); }\n                if (!key){ return store.clear(); }\n                return store.setAll(key, data);// overwrite=data, data=key\n            });\n            store._id = id;\n            try {\n                var testKey = '__store2_test';\n                area.setItem(testKey, 'ok');\n                store._area = area;\n                area.removeItem(testKey);\n            } catch (e) {\n                store._area = _.storage('fake');\n            }\n            store._ns = namespace || '';\n            if (!_.areas[id]) {\n                _.areas[id] = store._area;\n            }\n            if (!_.apis[store._ns+store._id]) {\n                _.apis[store._ns+store._id] = store;\n            }\n            return store;\n        },\n        storeAPI: {\n            // admin functions\n            area: function(id, area) {\n                var store = this[id];\n                if (!store || !store.area) {\n                    store = _.Store(id, area, this._ns);//new area-specific api in this namespace\n                    if (!this[id]){ this[id] = store; }\n                }\n                return store;\n            },\n            namespace: function(namespace, singleArea) {\n                if (!namespace){\n                    return this._ns ? this._ns.substring(0,this._ns.length-1) : '';\n                }\n                var ns = namespace, store = this[ns];\n                if (!store || !store.namespace) {\n                    store = _.Store(this._id, this._area, this._ns+ns+'.');//new namespaced api\n                    if (!this[ns]){ this[ns] = store; }\n                    if (!singleArea) {\n                        for (var name in _.areas) {\n                            store.area(name, _.areas[name]);\n                        }\n                    }\n                }\n                return store;\n            },\n            isFake: function(force) {\n                if (force) {\n                    this._real = this._area;\n                    this._area = _.storage('fake');\n                } else if (force === false) {\n                    this._area = this._real || this._area;\n                }\n                return this._area.name === 'fake';\n            },\n            toString: function() {\n                return 'store'+(this._ns?'.'+this.namespace():'')+'['+this._id+']';\n            },\n\n            // storage functions\n            has: function(key) {\n                if (this._area.has) {\n                    return this._area.has(this._in(key));//extension hook\n                }\n                return !!(this._in(key) in this._area);\n            },\n            size: function(){ return this.keys().length; },\n            each: function(fn, fill) {// fill is used by keys(fillList) and getAll(fillList))\n                for (var i=0, m=_.length(this._area); i<m; i++) {\n                    var key = this._out(_.key(this._area, i));\n                    if (key !== undefined) {\n                        if (fn.call(this, key, this.get(key), fill) === false) {\n                            break;\n                        }\n                    }\n                    if (m > _.length(this._area)) { m--; i--; }// in case of removeItem\n                }\n                return fill || this;\n            },\n            keys: function(fillList) {\n                return this.each(function(k, v, list){ list.push(k); }, fillList || []);\n            },\n            get: function(key, alt) {\n                var s = _.get(this._area, this._in(key)),\n                    fn;\n                if (typeof alt === \"function\") {\n                    fn = alt;\n                    alt = null;\n                }\n                return s !== null ? _.parse(s, fn) :\n                    alt != null ? alt : s;\n            },\n            getAll: function(fillObj) {\n                return this.each(function(k, v, all){ all[k] = v; }, fillObj || {});\n            },\n            transact: function(key, fn, alt) {\n                var val = this.get(key, alt),\n                    ret = fn(val);\n                this.set(key, ret === undefined ? val : ret);\n                return this;\n            },\n            set: function(key, data, overwrite) {\n                var d = this.get(key),\n                    replacer;\n                if (d != null && overwrite === false) {\n                    return data;\n                }\n                if (typeof overwrite !== \"boolean\") {\n                    replacer = overwrite;\n                }\n                return _.set(this._area, this._in(key), _.stringify(data, replacer)) || d;\n            },\n            setAll: function(data, overwrite) {\n                var changed, val;\n                for (var key in data) {\n                    val = data[key];\n                    if (this.set(key, val, overwrite) !== val) {\n                        changed = true;\n                    }\n                }\n                return changed;\n            },\n            add: function(key, data, replacer) {\n                var d = this.get(key);\n                if (d instanceof Array) {\n                    data = d.concat(data);\n                } else if (d !== null) {\n                    var type = typeof d;\n                    if (type === typeof data && type === 'object') {\n                        for (var k in data) {\n                            d[k] = data[k];\n                        }\n                        data = d;\n                    } else {\n                        data = d + data;\n                    }\n                }\n                _.set(this._area, this._in(key), _.stringify(data, replacer));\n                return data;\n            },\n            remove: function(key, alt) {\n                var d = this.get(key, alt);\n                _.remove(this._area, this._in(key));\n                return d;\n            },\n            clear: function() {\n                if (!this._ns) {\n                    _.clear(this._area);\n                } else {\n                    this.each(function(k){ _.remove(this._area, this._in(k)); }, 1);\n                }\n                return this;\n            },\n            clearAll: function() {\n                var area = this._area;\n                for (var id in _.areas) {\n                    if (_.areas.hasOwnProperty(id)) {\n                        this._area = _.areas[id];\n                        this.clear();\n                    }\n                }\n                this._area = area;\n                return this;\n            },\n\n            // internal use functions\n            _in: function(k) {\n                if (typeof k !== \"string\"){ k = _.stringify(k); }\n                return this._ns ? this._ns + k : k;\n            },\n            _out: function(k) {\n                return this._ns ?\n                    k && k.indexOf(this._ns) === 0 ?\n                        k.substring(this._ns.length) :\n                        undefined : // so each() knows to skip it\n                    k;\n            }\n        },// end _.storeAPI\n        storage: function(name) {\n            return _.inherit(_.storageAPI, { items: {}, name: name });\n        },\n        storageAPI: {\n            length: 0,\n            has: function(k){ return this.items.hasOwnProperty(k); },\n            key: function(i) {\n                var c = 0;\n                for (var k in this.items){\n                    if (this.has(k) && i === c++) {\n                        return k;\n                    }\n                }\n            },\n            setItem: function(k, v) {\n                if (!this.has(k)) {\n                    this.length++;\n                }\n                this.items[k] = v;\n            },\n            removeItem: function(k) {\n                if (this.has(k)) {\n                    delete this.items[k];\n                    this.length--;\n                }\n            },\n            getItem: function(k){ return this.has(k) ? this.items[k] : null; },\n            clear: function(){ for (var k in this.items){ this.removeItem(k); } }\n        }// end _.storageAPI\n    };\n\n    var store =\n        // safely set this up (throws error in IE10/32bit mode for local files)\n        _.Store(\"local\", (function(){try{ return localStorage; }catch(e){}})());\n    store.local = store;// for completeness\n    store._ = _;// for extenders and debuggers...\n    // safely setup store.session (throws exception in FF for file:/// urls)\n    store.area(\"session\", (function(){try{ return sessionStorage; }catch(e){}})());\n    store.area(\"page\", _.storage(\"page\"));\n\n    if (typeof define === 'function' && define.amd !== undefined) {\n        define('store2', [], function () {\n            return store;\n        });\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = store;\n    } else {\n        // expose the primary store fn to the global object and save conflicts\n        if (window.store){ _.conflict = window.store; }\n        window.store = store;\n    }\n\n})(this, this && this.define);\n","import mitt from 'mitt';\nimport { createContext, ReactNode, useCallback, useContext } from 'react';\nimport { useEffect, useState } from 'react';\nimport store2, { StoreType } from 'store2';\n\nexport type FirestarterStoreType = {\n  store: StoreType;\n  defaultValues?: { [key: string]: any };\n};\n\nconst StoreContext = createContext<FirestarterStoreType>({ store: store2, defaultValues: {} });\n\nexport function StoreProvider({\n  namespace = 'firestarter',\n  defaultValues = {},\n  children,\n}: {\n  namespace?: string;\n  defaultValues?: object;\n  children: ReactNode;\n}) {\n  console.info('Connect Store: ' + namespace);\n  const store = store2.namespace(namespace);\n  const value = { store, defaultValues };\n  return <StoreContext.Provider value={value}>{children}</StoreContext.Provider>;\n}\n\nexport const StoreConsumer = StoreContext.Consumer;\n\nexport function useStore() {\n  return useContext<FirestarterStoreType>(StoreContext);\n}\n\n// Emitters\nexport const emitters = {\n  local: mitt(),\n  session: mitt(),\n  page: mitt(),\n};\n\nfunction useStoreState(location: 'local' | 'session' | 'page', key: string, defaultValue?: any): [any, Function, boolean] {\n  const { store, defaultValues } = useStore();\n\n  const [value, setValue] = useState(defaultValue || (defaultValues && defaultValues[key]));\n  const [loaded, setLoaded] = useState(false);\n\n  function set(value: any) {\n    store[location].set(key, value);\n    emitters[location].emit(key, value);\n  }\n\n  useEffect(() => {\n    // Must set the value in an effect else the server will never match the client on the 1st render\n    setValue(store[location].get(key, defaultValue || (defaultValues && defaultValues[key])));\n\n    // You can use the loaded state if you need to wait for the store data\n    setLoaded(true);\n  }, [defaultValue, defaultValues, key, location, store]);\n\n  useEffect(() => {\n    function onValueUpdate() {\n      setValue(store.get(key, defaultValue));\n    }\n\n    emitters[location].on(key, onValueUpdate);\n\n    return () => {\n      emitters[location].off(key, onValueUpdate);\n    };\n  }, [defaultValue, key, location, store]);\n\n  return [value, set, loaded];\n}\n\nfunction useStoreSetter(location: 'local' | 'session' | 'page') {\n  const { store } = useStore();\n\n  function set(key: string, value: any) {\n    store[location].set(key, value);\n    emitters[location].emit(key, value);\n  }\n\n  return useCallback(set, [location, store]);\n}\n\nfunction useStoreGetter(location: 'local' | 'session' | 'page') {\n  const { store } = useStore();\n\n  function get(key: string) {\n    return store[location].get(key);\n  }\n\n  return useCallback(get, [location, store]);\n}\n\nfunction useStoreSet(location: 'local' | 'session' | 'page', key: string) {\n  const { store } = useStore();\n\n  function set(value: any) {\n    store[location].set(key, value);\n    emitters[location].emit(key, value);\n  }\n\n  return useCallback(set, [key, location, store]);\n}\n\nfunction useStoreGet(location: 'local' | 'session' | 'page', key: string) {\n  const { store } = useStore();\n\n  function get() {\n    return store[location].get(key);\n  }\n\n  return useCallback(get, [key, location, store]);\n}\n\nexport function useLocalState(key: string, defaultValue?: any): [any, Function, boolean] {\n  return useStoreState('local', key, defaultValue);\n}\n\nexport function useSessionState(key: string, defaultValue?: any): [any, Function, boolean] {\n  return useStoreState('session', key, defaultValue);\n}\n\nexport function usePageState(key: string, defaultValue?: any): [any, Function, boolean] {\n  return useStoreState('page', key, defaultValue);\n}\n\nexport function useLocalSetter() {\n  return useStoreSetter('local');\n}\n\nexport function useSessionSetter() {\n  return useStoreSetter('session');\n}\n\nexport function usePageSetter() {\n  return useStoreSetter('page');\n}\n\nexport function useLocalGetter() {\n  return useStoreGetter('local');\n}\n\nexport function useSessionGetter() {\n  return useStoreGetter('session');\n}\n\nexport function usePageGetter() {\n  return useStoreGetter('page');\n}\n\nexport function useLocalSet(key: string) {\n  return useStoreSet('local', key);\n}\n\nexport function useSessionSet(key: string) {\n  return useStoreSet('session', key);\n}\n\nexport function usePageSet(key: string) {\n  return useStoreSet('page', key);\n}\n\nexport function useLocalGet(key: string) {\n  return useStoreGet('local', key);\n}\n\nexport function useSessionGet(key: string) {\n  return useStoreGet('session', key);\n}\n\nexport function usePageGet(key: string) {\n  return useStoreGet('page', key);\n}\n","import { sendSignInLinkToEmail, User } from 'firebase/auth';\nimport { FormEventHandler, useEffect, useState } from 'react';\nimport { useAuth } from '../Auth';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport { useLocalSet } from '../Store';\n\nexport enum FirestarterLoginStatus {\n  Connecting,\n  Inputing,\n  Submitting,\n  Waiting,\n  Redirecting,\n}\n\nexport type FirestarterLoginState = {\n  status: FirestarterLoginStatus;\n  errors: any;\n  currentUser: User | null;\n  registerEmail: any;\n  submitHandler: FormEventHandler<HTMLFormElement>;\n  watchEmail: string;\n  stopWaiting: () => void;\n};\n\nexport type FirestarterLoginInputs = {\n  email: string;\n};\n\nexport function useLogin(): FirestarterLoginState {\n  const router = useRouter();\n  const { currentUser, connected, settings, auth } = useAuth();\n  const [waiting, setWaiting] = useState(false);\n  const setEmailForLogin = useLocalSet('emailForLogin');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setError,\n    formState: { errors, isSubmitting },\n  } = useForm<FirestarterLoginInputs>();\n\n  const onSubmit: SubmitHandler<FirestarterLoginInputs> = async ({ email }) => {\n    try {\n      if (auth) {\n        await sendSignInLinkToEmail(auth, email, {\n          url: `${location.origin}${settings.verifyPath}?redirect=${encodeURIComponent(String(router.query.redirect || settings.userPath))}`,\n          handleCodeInApp: true,\n        });\n        setWaiting(true);\n        // Save the email locally so you don't need to ask the user for it again if they open the link on the same device.\n        setEmailForLogin(email);\n      }\n    } catch (error) {\n      console.error(error);\n      setError('email', { type: 'login.failed', message: 'There was an error, check your email and try again.' });\n    }\n  };\n\n  // If user is authenticated, redirect to the user page\n  useEffect(() => {\n    if (currentUser) {\n      router.replace(settings.userPath);\n    }\n  }, [currentUser, router, settings.userPath]);\n\n  // Calculate status depending on other states\n  const status = !connected\n    ? FirestarterLoginStatus.Connecting\n    : currentUser\n    ? FirestarterLoginStatus.Redirecting\n    : waiting\n    ? FirestarterLoginStatus.Waiting\n    : isSubmitting\n    ? FirestarterLoginStatus.Submitting\n    : FirestarterLoginStatus.Inputing;\n\n  return {\n    status,\n    errors,\n    currentUser,\n    registerEmail: register('email', { required: 'Required' }),\n    submitHandler: handleSubmit(onSubmit),\n    watchEmail: watch('email'),\n    stopWaiting: () => setWaiting(false),\n  };\n}\n","import { signOut } from 'firebase/auth';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useAuth } from '../Auth';\n\nexport enum FirestarterLogoutStatus {\n  Connecting,\n  Redirecting,\n}\n\nexport function useLogout() {\n  const { auth, currentUser, settings, connected } = useAuth();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (auth) {\n      signOut(auth);\n    }\n  }, [auth]);\n\n  useEffect(() => {\n    if (connected && !currentUser) {\n      router.replace(settings.homePath);\n    }\n  }, [connected, currentUser, router, settings.homePath]);\n\n  return connected ? FirestarterLogoutStatus.Redirecting : FirestarterLogoutStatus.Connecting;\n}\n","import { isSignInWithEmailLink, sendSignInLinkToEmail, signInWithEmailLink, User } from 'firebase/auth';\nimport { FormEventHandler, useEffect, useState } from 'react';\nimport { useAuth } from '../Auth';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport { useLocalGet, useLocalSet } from '../Store';\n\nexport enum FirestarterVerifyStatus {\n  Connecting,\n  Inputing,\n  Submitting,\n  Waiting,\n  Redirecting,\n  LinkError,\n}\n\nexport type FirestarterVerifyState = {\n  status: FirestarterVerifyStatus;\n  errors: any;\n  currentUser: User | null;\n  registerEmail: any;\n  submitHandler: FormEventHandler<HTMLFormElement>;\n  watchEmail: string;\n  stopWaiting: () => void;\n};\n\nexport type FirestarterVerifyInputs = {\n  link: string;\n  email: string;\n};\n\nexport function useVerify(): FirestarterVerifyState {\n  const router = useRouter();\n  const { currentUser, connected, settings, auth } = useAuth();\n  const [waiting, setWaiting] = useState(true); // Start in waiting state whilst we verify the url\n  const getEmailForLogin = useLocalGet('emailForLogin');\n  const setEmailForLogin = useLocalSet('emailForLogin');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setError,\n    formState: { errors, isSubmitting },\n  } = useForm<FirestarterVerifyInputs>();\n\n  const onSubmit: SubmitHandler<FirestarterVerifyInputs> = ({ email }) => {\n    if (auth) {\n      console.log('Signing in with email link');\n      return signInWithEmailLink(auth, email, location.href)\n        .then(() => {\n          setWaiting(true);\n          setEmailForLogin(null);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError('email', { type: 'verify.invalidEmail', message: 'There was an error, check your email and try again.' });\n        });\n    }\n  };\n\n  useEffect(() => {\n    // signInWithEmailLink invalidates link once used and fails if run multiple times\n    // if running in strict development mode effect runs twice\n    // so wait until auth is ready and we dont have a user\n    if (auth && connected && !currentUser) {\n      console.info('Verify email link');\n      if (isSignInWithEmailLink(auth, location.href)) {\n        const email = getEmailForLogin();\n\n        if (email) {\n          signInWithEmailLink(auth, email, location.href)\n            .then(() => {\n              // Auth will automatically update users so just set to waiting until we detect it\n              setWaiting(true);\n              setEmailForLogin(null);\n            })\n            .catch((error) => {\n              setError('link', { type: 'verify.invalidLink', message: 'There was an error, provide your email and try again.' });\n              console.error(error);\n            });\n        } else {\n          // No email in storage so show the form\n          setWaiting(false);\n        }\n      } else {\n        setWaiting(false);\n        setError('link', { type: 'verify.badLink', message: 'There was an error with your verification link.' });\n      }\n    }\n  }, [currentUser, connected, auth, setError, setEmailForLogin, getEmailForLogin]);\n\n  // If user is authenticated, redirect to the user page\n  useEffect(() => {\n    if (currentUser) {\n      router.replace(settings.userPath);\n    }\n  }, [currentUser, router, settings.userPath]);\n\n  // Calculate status depending on other states\n  const status = !connected\n    ? FirestarterVerifyStatus.Connecting\n    : currentUser\n    ? FirestarterVerifyStatus.Redirecting\n    : waiting\n    ? FirestarterVerifyStatus.Waiting\n    : isSubmitting\n    ? FirestarterVerifyStatus.Submitting\n    : errors.link\n    ? FirestarterVerifyStatus.LinkError\n    : FirestarterVerifyStatus.Inputing;\n\n  return {\n    status,\n    errors,\n    currentUser,\n    registerEmail: register('email', { required: 'Required' }),\n    submitHandler: handleSubmit(onSubmit),\n    watchEmail: watch('email') || getEmailForLogin(),\n    stopWaiting: () => setWaiting(false),\n  };\n}\n"],"names":["all","Map","on","type","handler","handlers","get","push","set","off","splice","indexOf","emit","evt","slice","map","$49be676b3fce3635$var$defaultSettings","homePath","loginPath","logoutPath","verifyPath","actionPath","userPath","$49be676b3fce3635$var$AuthContext","$kdY4e$react","createContext","currentUser","connected","auth","settings","$91f4b7a60500b385$export$2e2bcd8739ae039","Consumer","$e6242b051d2c08fb$var$FirestoreContext","window","define","_","store1","$fd84ff99f5c548ec$exports","version","areas","apis","inherit","api","o","p","hasOwnProperty","Object","defineProperty","getOwnPropertyDescriptor","stringify","d","fn","undefined","JSON","replace","parse","s","revive","e","name","storeAPI","area","key","getItem","string","setItem","remove","removeItem","i","length","clear","Store","id","namespace","store","data","overwrite","arguments","getAll","transact","each","setAll","_id","testKey","_area","storage","_ns","this","singleArea","substring","ns","isFake","force","_real","toString","has","_in","size","keys","fill","m","_out","call","fillList","k","v","list","alt","fillObj","val","ret","replacer","changed","add","Array","concat","clearAll","storageAPI","items","c","localStorage","local","sessionStorage","amd","conflict","$ecb46ba923dc9dfb$var$StoreContext","$parcel$interopDefault","defaultValues","$49ae4d0ce49575a6$export$df5bf2b361a69287","FirestarterLoginStatus1","$6b9264415c4ce51a$export$fecfa0293f70bc70","FirestarterLogoutStatus1","$2f98049ab2550072$export$38b6479fb4ff8855","FirestarterVerifyStatus1"],"version":3,"file":"index.js.map","sourceRoot":"../"}